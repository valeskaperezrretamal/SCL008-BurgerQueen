{"version":3,"sources":["supercomponent/NavigationMenu.js","supercomponent/ClientName.js","supercomponent/ElementMenu.js","supercomponent/OptionMenuWaiter.js","supercomponent/FrameMenu.js","App.js","serviceWorker.js","index.js"],"names":["NavigationMenu","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","react_default","a","createElement","className","onClick","act","type","Component","ClientName","state","value","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","alert","preventDefault","onSubmit","onChange","ElementMenu","name","price","OptionMenuWaiter","category","_this2","data","desayuno","map","optmenu","supercomponent_ElementMenu","option","precio","restodeldia","tiposdecarne","extra","Order","clientName","order","productName","qty","subtotal","e","App","pantalla","_useState","useState","_useState2","slicedToArray","mode","changeMode","supercomponent_ClientName","supercomponent_OptionMenuWaiter","FrameMenu","supercomponent_NavigationMenu","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb64d042.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './style/StyleNavigationMenu.css';\r\n\r\n\r\n\r\nclass NavigationMenu extends Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n   \r\n    render(){\r\n        return(\r\n            <div className=\"navigationMenu\">\r\n              <button onClick ={()=>{return this.props.act(\"mesero\")}} type=\"button\" className=\"btnOption\">Opción Menú/Mesero</button>\r\n              <button onClick ={()=>{return this.props.act(\"cocina\")}} type=\"button\" className=\"btnKitchen\">Pedido/Cocina</button>\r\n              <button onClick ={()=>{return this.props.act(\"historico\")}} type=\"button\" className=\"btnRecord\">Historial</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavigationMenu;\r\n\r\n//import React, {component} from 'react';\r\n\r\n\r\n//class NavigationMenu extends component{\r\n    //constructor(){\r\n      //  super();\r\n        \r\n\r\n\r\n    //}\r\n    //render(){\r\n      //  return(\r\n        //    <div>\r\n          //      <nav>\r\n            //        <ul>\r\n              //          <li> <a href=\"\" >Mesero</a></li>\r\n                //</ul>\r\n                //</nav>\r\n            //</div>\r\n        //)\r\n    //}\r\n    \r\n\r\n//}\r\n//export default NavigationMenu;\r\n","import React,{Component} from 'react';\r\nclass ClientName extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: ''};\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      alert('Pedido de: ' + this.state.value);\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"clientName\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Nombre Cliente:\r\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input type=\"submit\" value=\"ingresar\" />\r\n        </form>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default ClientName;","import React, {Component} from 'react';\r\nimport './style/StyleElementMenu.css';\r\nclass ElementMenu extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"elementmenu\">\r\n                <ul>\r\n                    <li>{this.props.name}</li>\r\n                    <li>{this.props.price}</li>\r\n                </ul>\r\n                <button type=\"button\" className=\"addone\">+1</button>\r\n                <button type=\"button\" className=\"lessone\">-1</button>\r\n                \r\n            </div>\r\n\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\nexport default ElementMenu;","import React,{Component} from'react';\r\nimport data from '../OptionMenu.json';\r\nimport ElementMenu from './ElementMenu.js';\r\nimport './style/StyleOptionMenuWaiter.css'\r\n\r\nclass OptionMenuWaiter extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    \r\n    this.state={category: \"\"};\r\n   \r\n  }\r\n \r\n  render(){\r\n    return(\r\n      <div className=\"optionmenuwaiter\">\r\n        <button onClick={()=>{this.setState({category: \"desayuno\"})}}> Desayuno</button>\r\n        <button onClick={()=>{this.setState({category: \"restodeldia\"})}}> Resto del día</button>\r\n        <button onClick={()=>{this.setState({category: \"tiposdecarne\"})}}> Tipos de carne</button>\r\n        <button onClick={()=>{this.setState({category: \"extra\"})}}> extras</button>\r\n\r\n     \r\n    {this.state.category===\"desayuno\" ? data.desayuno.map(optmenu=>{return <ElementMenu name={optmenu.option} price={optmenu.precio}/>}):\"\"}\r\n    {this.state.category===\"restodeldia\" ? data.restodeldia.map(optmenu=>{return <ElementMenu name={optmenu.option}price={optmenu.precio}/>}):\"\"}\r\n    {this.state.category===\"tiposdecarne\" ? data.tiposdecarne.map(optmenu=>{return <ElementMenu name={optmenu.option} price={optmenu.precio}/>}):\"\"}\r\n    {this.state.category===\"extra\" ? data.extra.map(optmenu=>{return <ElementMenu name={optmenu.option} price={optmenu.precio}/>}):\"\"}\r\n    \r\n    \r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n \r\n}\r\n  \r\n\r\nexport default OptionMenuWaiter;\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport './style/StyleOrder.css';\r\n\r\nclass Order extends Component{\r\n    constructor(props){\r\n        super(props);\r\n//esto es una prueba, se va a implementar lectura desde redux\r\n        this.state={clientName: \"vale\", order:\r\n    [{productName: \"Café\",\r\n    qty: 3,\r\n    subtotal: 3000},{\r\n        productName: \"sandwich de jamón y queso\",\r\n        qty: 2,\r\n        subtotal: 2000   \r\n    }]};\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"order\">\r\n                <p>Pedido de {this.state.clientName}</p>\r\n                {this.state.order.map((e)=>{\r\n                    return e.productName + e.qty + e.subtotal\r\n\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Order;","import React, { useState } from 'react'; \r\nimport './App.css';\r\n//import MenuButton from './MenuButton.js';\r\nimport NavigationMenu from './supercomponent/NavigationMenu';\r\nimport ClientName from './supercomponent/ClientName';\r\nimport OptionMenuWaiter from './supercomponent/OptionMenuWaiter';\r\nimport FrameMenu from './supercomponent/FrameMenu';\r\n\r\n\r\n\r\n//import OptionMenu from './OptionMenu.js';\r\n\r\nfunction App(){\r\n  \r\n  const [mode, changeMode] = useState('');\r\n     \r\n  \r\n  let pantalla;\r\n  if (mode===\"mesero\"){\r\n    pantalla=<div><ClientName/>\r\n                <OptionMenuWaiter/>;\r\n              <FrameMenu></FrameMenu></div>\r\n  }\r\n\r\n\r\n  return (\r\n\r\n\r\n\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n       \r\n      <h1 className=\"titulo\">{\"Burger Queen\"} </h1>\r\n      <NavigationMenu act={changeMode}/>\r\n      {pantalla}         \r\n       \r\n    </header>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}