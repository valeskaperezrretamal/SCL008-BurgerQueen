{"version":3,"sources":["supercomponent/NavigationMenu.js","actions/Order.js","actions/actionTypes.js","supercomponent/ClientName.js","supercomponent/ElementMenu.js","supercomponent/OptionMenuWaiter.js","supercomponent/FrameMenu.js","App.js","serviceWorker.js","reducers/index.js","reducers/Order.js","store/index.js","store/initialState.js","index.js"],"names":["NavigationMenu","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","react_default","a","createElement","className","onClick","act","type","Component","addToOrder","dispatch","item","payload","removeOfOrder","addName","ClientName","textBox","React","createRef","_this2","ref","ADD_NAME","current","value","connect","state","objectSpread","ElementMenu","name","price","ADD","DELETE","OptionMenuWaiter","category","setState","data","desayuno","map","optmenu","supercomponent_ElementMenu","option","precio","restodeldia","tiposdecarne","extra","FrameMenu","clientName","listOrder","e","Order","actualOrder","App","pantalla","_useState","useState","_useState2","slicedToArray","mode","changeMode","supercomponent_ClientName","supercomponent_OptionMenuWaiter","supercomponent_FrameMenu","supercomponent_NavigationMenu","Boolean","window","location","hostname","match","combineReducers","arguments","length","undefined","kitchenlist","historial","action","concat","filter","createStore","reducer","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","src_App","document","getElementById","es","store","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.335df97b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './style/StyleNavigationMenu.css';\r\n\r\n\r\n\r\nclass NavigationMenu extends Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n   \r\n    render(){\r\n        return(\r\n            <div className=\"navigationMenu\">\r\n              <button onClick ={()=>{return this.props.act(\"mesero\")}} type=\"button\" className=\"btnOption\">Opción Menú/Mesero</button>\r\n              <button onClick ={()=>{return this.props.act(\"cocina\")}} type=\"button\" className=\"btnKitchen\">Pedido/Cocina</button>\r\n              <button onClick ={()=>{return this.props.act(\"historico\")}} type=\"button\" className=\"btnRecord\">Historial</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavigationMenu;\r\n\r\n//import React, {component} from 'react';\r\n\r\n\r\n//class NavigationMenu extends component{\r\n    //constructor(){\r\n      //  super();\r\n        \r\n\r\n\r\n    //}\r\n    //render(){\r\n      //  return(\r\n        //    <div>\r\n          //      <nav>\r\n            //        <ul>\r\n              //          <li> <a href=\"\" >Mesero</a></li>\r\n                //</ul>\r\n                //</nav>\r\n            //</div>\r\n        //)\r\n    //}\r\n    \r\n\r\n//}\r\n//export default NavigationMenu;\r\n","import {ADD_TO_ORDER, REMOVE_OF_ORDER, ADD_NAME} from './actionTypes';\r\n\r\n\r\nexport const addToOrder = dispatch => item =>{\r\n    dispatch({\r\n        type: ADD_TO_ORDER,\r\n        payload: item\r\n    })\r\n\r\n}\r\n export const removeOfOrder = dispatch => item =>{\r\n     dispatch({\r\n         type: REMOVE_OF_ORDER,\r\n         payload: item\r\n     })\r\n }\r\n\r\n export const addName = dispatch => item =>{\r\n    dispatch({\r\n        type: ADD_NAME,\r\n        payload: item\r\n    })\r\n}\r\n","//puente entre nosotras y tras desarrolladoras, es para coordinar, es para saber que estados van haber en mi proyecto\r\n//las acciones que llaman estados, con mobre super claro, de la accioon que va a pasar\r\n//poner nombre en acciones\r\nexport const ADD_NAME=\"ADD_NAME\";\r\nexport const ADD_TO_ORDER=\"ADD_TO_ORDER\";\r\nexport const REMOVE_OF_ORDER=\"REMOVE_OF_ORDER\";\r\n","import React,{Component} from 'react';\r\nimport {connect}from 'react-redux';\r\nimport {addName} from '../actions/Order';\r\n\r\n\r\nclass ClientName extends Component {\r\n    constructor(props) {\r\n      super(props);   \r\n      this.textBox = React.createRef();  \r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"clientName\">\r\n        <form>\r\n          <label>\r\n            Nombre Cliente:\r\n            <input ref={this.textBox} type=\"text\"  />\r\n          </label>\r\n          <input type=\"button\" onClick={()=>{this.props.ADD_NAME(this.textBox.current.value)}}value=\"ingresar\" />\r\n        </form>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  const mapStateToProps = (state)=>{\r\n    return {\r\n      ...state\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      //turnToName: turnName(dispatch),\r\n      ADD_NAME: addName(dispatch)\r\n     \r\n    }\r\n  }\r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ClientName);","import React, {Component} from 'react';\r\nimport './style/StyleElementMenu.css';\r\nimport {connect} from 'react-redux';\r\nimport {addToOrder,removeOfOrder} from '../actions/Order';\r\n\r\n\r\n\r\nclass ElementMenu extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"elementmenu\">\r\n                <ul>\r\n                    <li>{this.props.name}</li>\r\n                    <li>{this.props.price}</li>\r\n                </ul>\r\n                <button onClick={()=>{this.props.ADD({name: this.props.name, price: this.props.price})}} type=\"button\" className=\"addone\">+1</button>\r\n                <button onClick={()=>{this.props.DELETE(this.props)}}type=\"button\" className=\"lessone\">-1</button>\r\n                \r\n            </div>\r\n\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n const mapStateToProps = (state)=>{\r\n    return {\r\n      ...state\r\n    };\r\n  }; \r\n\r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      //turnToName: turnName(dispatch),\r\n      ADD: addToOrder(dispatch),\r\n      DELETE: removeOfOrder(dispatch) \r\n    }\r\n  }\r\n  export default connect(\r\n     mapStateToProps, \r\n    mapDispatchToProps\r\n  )(ElementMenu);","import React,{Component} from'react';\r\nimport data from '../OptionMenu.json';\r\nimport ElementMenu from './ElementMenu.js';\r\nimport './style/StyleOptionMenuWaiter.css'\r\n\r\nclass OptionMenuWaiter extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    \r\n    this.state={category: \"\"};\r\n   \r\n  }\r\n \r\n  render(){\r\n    return(\r\n      <div className=\"optionmenuwaiter\">\r\n        <button onClick={()=>{this.setState({category: \"desayuno\"})}}> Desayuno</button>\r\n        <button onClick={()=>{this.setState({category: \"restodeldia\"})}}> Resto del día</button>\r\n        <button onClick={()=>{this.setState({category: \"tiposdecarne\"})}}> Tipos de carne</button>\r\n        <button onClick={()=>{this.setState({category: \"extra\"})}}> extras</button>\r\n\r\n     \r\n    {this.state.category===\"desayuno\" ? data.desayuno.map(optmenu=>{return <ElementMenu name={optmenu.option} price={optmenu.precio}/>}):\"\"}\r\n    {this.state.category===\"restodeldia\" ? data.restodeldia.map(optmenu=>{return <ElementMenu name={optmenu.option}price={optmenu.precio}/>}):\"\"}\r\n    {this.state.category===\"tiposdecarne\" ? data.tiposdecarne.map(optmenu=>{return <ElementMenu name={optmenu.option} price={optmenu.precio}/>}):\"\"}\r\n    {this.state.category===\"extra\" ? data.extra.map(optmenu=>{return <ElementMenu name={optmenu.option} price={optmenu.precio}/>}):\"\"}\r\n    \r\n    \r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n \r\n}\r\n  \r\n\r\nexport default OptionMenuWaiter;\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './style/StyleOrder.css';\r\n//import {lo que use de boostrap} from 'react-bootstrap';\r\n\r\nclass FrameMenu extends Component{\r\n    constructor(props){\r\n        super(props);\r\n//esto es una prueba, se va a implementar lectura desde redux\r\n/*         this.state={clientName: \"vale\", order:\r\n    [{productName: \"Café\",\r\n    qty: 3,\r\n    subtotal: 3000},{\r\n        productName: \"sandwich de jamón y queso\",\r\n        qty: 2,\r\n        subtotal: 2000   \r\n    }]};\r\n */\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"order\"> \r\n                <p>Pedido de {this.props.clientName}</p>\r\n              {this.props.listOrder.map((e)=>{\r\n                    return <p>{e.name}{\" $\"}{e.price}</p>\r\n\r\n                })}  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n      ...state.Order.actualOrder\r\n    };\r\n  };\r\n  \r\n \r\n  export default connect(\r\n    mapStateToProps\r\n    \r\n  )(FrameMenu);","//libreria para usar estado sin escribir clase\r\nimport React, { useState } from 'react'; \r\nimport './App.css';\r\n//import MenuButton from './MenuButton.js';\r\nimport NavigationMenu from './supercomponent/NavigationMenu';\r\nimport ClientName from './supercomponent/ClientName';\r\nimport OptionMenuWaiter from './supercomponent/OptionMenuWaiter';\r\nimport FrameMenu from './supercomponent/FrameMenu';\r\n\r\n\r\n\r\n//import OptionMenu from './OptionMenu.js';\r\n\r\nfunction App(){\r\n  //mode: estado, changeMode:metodo para cambiar estado\r\n  const [mode, changeMode] = useState('');\r\n     \r\n  \r\n  let pantalla;\r\n  if (mode===\"mesero\"){\r\n    pantalla=<div><ClientName/>\r\n                <OptionMenuWaiter/>;\r\n              <FrameMenu></FrameMenu></div>\r\n  }\r\n\r\n\r\n  return (\r\n\r\n\r\n\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n       \r\n      <h1 className=\"titulo\">{\"Burger Queen\"} </h1>\r\n      <NavigationMenu act={changeMode}/>\r\n      {pantalla}         \r\n       \r\n    </header>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//convina todos los reduces en un obj. export con combineReducers\r\n//funciones puras solo dependen de los parametros que le ingresan y son faciles de testear\r\nimport { combineReducers } from 'redux';\r\nimport Order from './Order';\r\nexport default combineReducers({\r\n    Order\r\n  });\r\n","//acá va la función que le da un nuevo estado a los componentes\r\nimport { ADD_TO_ORDER, REMOVE_OF_ORDER, ADD_NAME } from \"../actions/actionTypes\";\r\n\r\nexport default (\r\nstate={  //pasado\r\n    actualOrder: {clientName: \"\", listOrder: []},\r\n    kitchenlist: [],\r\n    historial: []\r\n\r\n},\r\naction //presente\r\n) => {\r\n    switch(action.type){\r\n        case ADD_TO_ORDER:\r\n            return{ //futuro\r\n                ...state,\r\n                actualOrder:{\r\n                    ...state.actualOrder,\r\n                    listOrder: state.actualOrder.listOrder.concat([action.payload])\r\n                }\r\n            }\r\n        case REMOVE_OF_ORDER:\r\n            return{\r\n                ...state,\r\n                actualOrder:{\r\n                    ...state.actualOrder,\r\n                    listOrder: state.actualOrder.listOrder.filter((e)=>{return([action.payload]!==e.name)})\r\n            }\r\n            }\r\n\r\n        case ADD_NAME:\r\n        return{\r\n        ...state,\r\n        actualOrder:{\r\n            ...state.actualOrder,\r\n            clientName: action.payload\r\n            //const copy=Object.assign({},state)\r\n            //copy.actualOrder.clientName=[action.payload]\r\n        //return copy;\r\n    }\r\n    }\r\n            default: return state;\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n//...copiar estado anterior y la , es para sobreescribir las cosas que yo quiero modificar\r\n//siemore es bueno copiar el estado anterior\r\n//default: return statement;   //para poder retornar estado anterior, en caso de acualquir cosa y no se cae\r\n//el reduce se pone el resuktado de las acciones\r\n\r\n\r\n//lenguaje rasp y lista:lenguajes funcionales\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducer from '../reducers';\r\nimport state from './initialState';\r\n\r\n// con esto creamos el almacen y estados inicial\r\nexport default createStore(\r\n    reducer,\r\n    state,\r\n    composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n  );","//como parte mi aplicación, parte vacio\r\nexport default {\r\n    \r\n};\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}